{"version":3,"sources":["components/StadiumBoard.js","components/StadiumBillboard.js","components/FieldArea.js","utils/Teams.js","utils/Commentator.js","components/TeamPlayer.js","components/PlayersZone.js","components/StadiumField.js","index.js"],"names":["StadiumBoard","localGoals","visitorGoals","attachShadow","mode","shadowRoot","innerHTML","HTMLElement","querySelector","addEventListener","incLocalGoals","bind","incVisitorGoals","data","textContent","number","name","customElements","define","UPDATE_TIME","StadiumBillboard","left","right","max","shadow","enable","changeBillBoard","timer","setInterval","clearInterval","Math","random","style","backgroundImage","images","FieldArea","classList","add","DEMARCATION","min","slug","toLowerCase","replace","names","keepers","players","getKeeper","splice","length","getPlayer","Teams","team","i","player","avatar","avatars","stats","velocity","resistance","aggressiveness","quality","energy","demarcation","media","Object","values","reduce","p","c","push","FAVORITE_ENGINE","Commentator","speechSynthesis","voiceEngine","getVoices","event","key","changeEngine","text","utterance","SpeechSynthesisUtterance","lang","voice","speak","engine","console","log","cloneDeep","object","JSON","parse","stringify","commentator","createTeam","getEnergyColor","Number","parseInt","TeamPlayer","getAttribute","dataset","assign","setProperty","playName","onMouseEnter","disableAvatar","enableAvatar","CustomEvent","detail","getData","dispatchEvent","TEAM_EQUIPATION","FORMATION_TYPES","PlayersZone","currentEquipation","currentFormation","formation","keyListener","remove","FIELD_TYPES","StadiumField","currentField","rx","scale","playerZ","onWheel","shiftKey","deltaY","board","document","setData"],"mappings":";AAkFA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,IAAA,IAAA,SAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,OAAA,IAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mBAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,QAAA,IAAA,EAAA,CAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,SAAA,IAAA,OAAA,EAAA,EAAA,UAAA,EAAA,MAAA,aAAA,OAAA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,EAAA,EAAA,KAAA,GAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,QAAA,UAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,MAAA,EAAA,GAAA,IAAA,EAAA,IAAA,SAAA,KAAA,MAAA,EAAA,IAAA,OAAA,GAAA,EAAA,EAAA,EAAA,WAAA,IAAA,MAAA,KAAA,WAAA,SAAA,EAAA,GAAA,OAAA,IAAA,SAAA,SAAA,KAAA,GAAA,QAAA,iBAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAlFMA,IAAAA,EAkFN,SAAA,GAjFiB,SAAA,IAAA,IAAA,EAAA,OAAA,EAAA,KAAA,IACb,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QAEKC,WAAa,EACbC,EAAAA,aAAe,EAEfC,EAAAA,aAAa,CAAEC,KAAM,SACrBC,EAAAA,WAAWC,UAgDuB,6mCAAA,OAAA,EAAKL,WACH,uDAAA,OAAA,EAAKC,aAjD9C,gEAPa,EAiFjB,OAAA,EAAA,EAlF2BK,EAAAA,cAkF3B,EAAA,EAAA,CAAA,CAAA,IAAA,oBApBuB,MAAA,WACdF,KAAAA,WAAWG,cAAc,UAAUC,iBAAiB,QAAS,KAAKC,cAAcC,KAAK,OACrFN,KAAAA,WAAWG,cAAc,YAAYC,iBAAiB,QAAS,KAAKG,gBAAgBD,KAAK,SAkBlG,CAAA,IAAA,UAfWE,MAAAA,SAAAA,GACFR,KAAAA,WAAWG,cAAc,QAAQM,YAAcD,EAAKE,OAAS,KAAOF,EAAKG,OAclF,CAAA,IAAA,gBAXmB,MAAA,WACVf,KAAAA,aACAI,KAAAA,WAAWG,cAAc,UAAUM,YAAc,KAAKb,aAS/D,CAAA,IAAA,kBANqB,MAAA,WACZC,KAAAA,eACAG,KAAAA,WAAWG,cAAc,YAAYM,YAAc,KAAKZ,iBAIjE,EAAA,GAAAe,eAAeC,OAAO,gBAAiBlB;;;;;;;;;;;;ACZvC,aAtEA,IAAA,EAAA,EAAA,QAAA,6BAsEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,IAAA,IAAA,SAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,OAAA,IAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mBAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,QAAA,IAAA,EAAA,CAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,SAAA,IAAA,OAAA,EAAA,EAAA,UAAA,EAAA,MAAA,aAAA,OAAA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,EAAA,EAAA,KAAA,GAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,QAAA,UAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,MAAA,EAAA,GAAA,IAAA,EAAA,IAAA,SAAA,KAAA,MAAA,EAAA,IAAA,OAAA,GAAA,EAAA,EAAA,EAAA,WAAA,IAAA,MAAA,KAAA,WAAA,SAAA,EAAA,GAAA,OAAA,IAAA,SAAA,SAAA,KAAA,GAAA,QAAA,iBAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GApEA,IAAMmB,EAAc,GAEdC,EAkEN,SAAA,GAjEiB,SAAA,IAAA,IAAA,EAAA,OAAA,EAAA,KAAA,IACb,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QAEKC,KAAO,EACPC,EAAAA,MAAQ,EACRC,EAAAA,IAAM,EAENC,EAAAA,OAAS,EAAKrB,aAAa,CAAEC,KAAM,SACnCoB,EAAAA,OAAOlB,UAAZ,oyBARa,EAiEjB,OAAA,EAAA,EAlE+BC,EAAAA,cAkE/B,EAAA,EAAA,CAAA,CAAA,IAAA,oBArBuB,MAAA,WACdkB,KAAAA,WAoBT,CAAA,IAAA,SAjBY,MAAA,WACHC,KAAAA,kBACAC,KAAAA,MAAQC,YAAY,KAAKF,gBAAgBf,KAAK,MAAqB,IAAdQ,KAe9D,CAAA,IAAA,UAZa,MAAA,WACTU,cAAc,KAAKF,SAWvB,CAAA,IAAA,kBARqB,MAAA,WACZN,KAAAA,KAAO,KAAOS,KAAKC,SAAW,KAAKR,KACnCD,KAAAA,MAAQ,KAAOQ,KAAKC,SAAW,KAAKR,KACpCC,KAAAA,OAAOhB,cAAc,SAASwB,MAAMC,gBAAyBC,OAAAA,OAAAA,EAAO,QAAA,KAAKb,MAA9E,KACKG,KAAAA,OAAOhB,cAAc,UAAUwB,MAAMC,gBAAyBC,OAAAA,OAAAA,EAAO,QAAA,KAAKZ,OAA/E,SAIJ,EAAA,GAAAL,eAAeC,OAAO,oBAAqBE;;ACvD3C,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,IAAA,IAAA,SAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,OAAA,IAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mBAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,QAAA,IAAA,EAAA,CAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,SAAA,IAAA,OAAA,EAAA,EAAA,UAAA,EAAA,MAAA,aAAA,OAAA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,EAAA,EAAA,KAAA,GAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,QAAA,UAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,MAAA,EAAA,GAAA,IAAA,EAAA,IAAA,SAAA,KAAA,MAAA,EAAA,IAAA,OAAA,GAAA,EAAA,EAAA,EAAA,WAAA,IAAA,MAAA,KAAA,WAAA,SAAA,EAAA,GAAA,OAAA,IAAA,SAAA,SAAA,KAAA,GAAA,QAAA,iBAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAfMe,IAAAA,EAeN,SAAA,GAdiB,SAAA,IAAA,IAAA,EAAA,OAAA,EAAA,KAAA,IACb,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKC,UAAUC,IAAI,QAEd/B,EAAAA,UAAL,2MAJa,EAcjB,OAAA,EAAA,EAfwBC,EAAAA,cAexB,EAAA,GAAAU,eAAeC,OAAO,aAAciB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmCnC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlDD,IAAA,EAAA,EAAA,QAAA,oBAkDC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAhDD,IAAMG,EAAc,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAErFP,EAAS,WAACQ,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGhB,EAAV,UAAA,OAAA,EAAA,UAAA,QAAA,EAAkBgB,OAAAA,KAAST,KAAKC,UAAYR,EAAMgB,KAC3DC,EAAO,SAAAxB,GAAQA,OAAAA,EAAKyB,cAAcC,QAAQ,IAAK,MAE/CC,EAAQ,CACZC,QAAS,CACP,cAAe,YAAa,gBAAiB,cAAe,eAE9DC,QAAS,CACP,cAAe,eAAgB,YAAa,eAAgB,cAC5D,eAAgB,kBAAmB,gBAAiB,gBAAiB,kBACrE,aAAc,eAAgB,aAAc,kBAAmB,gBAC/D,eAAgB,iBAAkB,cAAe,cAAe,eAChE,gBAAiB,WAAY,cAAe,iBAAkB,iBAC9D,cAAe,eAAgB,iBAAkB,eAAgB,iBAI/DC,EAAY,WAAMH,OAAAA,EAAMC,QAAQG,OAAOhB,EAAO,EAAGY,EAAMC,QAAQI,QAAS,GAAG,IAAM,iBACjFC,EAAY,WAAMN,OAAAA,EAAME,QAAQE,OAAOhB,EAAO,EAAGY,EAAME,QAAQG,QAAS,GAAG,IAAM,iBAElEE,EA0BpB,WAAA,SAAA,IAAA,EAAA,KAAA,GAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,aAzBsB,MAAA,WAGd,IAFCC,IAAAA,EAAO,GAEJC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACrBpC,IAAAA,EAAa,IAANoC,EAAUN,IAAcG,IAE/BI,EAAS,CACbrC,KAAAA,EACAsC,OAAQC,EAASf,QAAAA,EAAKxB,IACtBwC,MAAO,CACLC,SAAU1B,EAAO,GAAI,KACrB2B,WAAY3B,EAAO,GAAI,KACvB4B,eAAgB5B,EAAO,GAAI,KAC3B6B,QAAS7B,EAAO,GAAI,KACpB8B,OAAQ9B,EAAO,GAAI,MAErB+B,YAAaxB,EAAYc,IAG3BC,EAAOG,MAAMO,SAAYC,OAAOC,OAAOZ,EAAOG,OAAOU,OAAO,SAACC,EAAGC,GAAMD,OAAAA,EAAIC,IAAM,GAChFjB,EAAKkB,KAAKhB,GAGLF,OAAAA,MAEV,EAAA,GAAA,QAAA,QAAA;;ACzBE,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAzBH,IAAMmB,EAAkB,EAEHC,EAuBlB,WAtBc,SAAA,IAAA,IAAA,EAAA,KAAA,EAAA,KAAA,GACbC,gBAAgB/D,iBAAiB,gBAAiB,WAChD,EAAKgE,YAAcD,gBAAgBE,YAAYJ,KAGjD7D,iBAAiB,UAAW,SAACkE,GACT,MAAdA,EAAMC,KACR,EAAKC,iBAeV,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAVMC,MAAAA,SAAAA,GACCC,IAAAA,EAAY,IAAIC,yBAAyBF,GAC/CC,EAAUE,KAAO,KACjBF,EAAUG,MAAQ,KAAKT,aAAe,KACtCD,gBAAgBW,MAAMJ,KAMvB,CAAA,IAAA,eAH8E,MAAA,WAAjEK,IAAAA,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,MAAGtD,KAAKC,SAAWyC,gBAAgBE,YAAY1B,QAC/DyB,KAAAA,YAAcD,gBAAgBE,YAAYU,GAC/CC,QAAQC,IAAI,oBAAqB,KAAKb,YAAYzD,UACnD,EAAA,GAAA,QAAA,QAAA;;ACsCH,aA/DA,IAAA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,uBA8DA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,IAAA,IAAA,SAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,OAAA,IAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mBAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,QAAA,IAAA,EAAA,CAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,SAAA,IAAA,OAAA,EAAA,EAAA,UAAA,EAAA,MAAA,aAAA,OAAA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,EAAA,EAAA,KAAA,GAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,QAAA,UAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,MAAA,EAAA,GAAA,IAAA,EAAA,IAAA,SAAA,KAAA,MAAA,EAAA,IAAA,OAAA,GAAA,EAAA,EAAA,EAAA,WAAA,IAAA,MAAA,KAAA,WAAA,SAAA,EAAA,GAAA,OAAA,IAAA,SAAA,SAAA,KAAA,GAAA,QAAA,iBAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GA3DA,IAAMuE,EAAY,SAAAC,GAAUC,OAAAA,KAAKC,MAAMD,KAAKE,UAAUH,KAEhDI,EAAc,IAAIrB,EAAJ,QACdpB,EAAOD,EAAM2C,QAAAA,aAEbC,EAAiB,SAAAjC,GACfT,IAAAA,EAAI2C,OAAOC,SAASnC,GACnBT,OAAAA,EAAI,GAAK,MAAQA,EAAI,GAAK,SAAW,UAGxC6C,EAiDN,SAAA,GAhDiB,SAAA,IAAA,IAAA,EAAA,OAAA,EAAA,KAAA,IACb,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKlF,OAASgF,OAAOC,SAAS,EAAKE,aAAa,WAG3CC,EAAAA,QAAQpF,OAAS,EAAKA,OACtBqB,EAAAA,UAAUC,IAAI,SAAc,IAAA,OAAA,EAAKtB,SACtCiD,OAAOoC,OAAab,EAAAA,GAAAA,EAAUpC,EAAK,EAAKpC,OAAS,KAE5CiB,EAAAA,MAAMqE,YAAY,kBAAsB,GAAA,OAAA,EAAK7C,MAAMK,OAAxD,MACK7B,EAAAA,MAAMqE,YAAY,wBAAyBP,EAAe,EAAKtC,MAAMK,SAErEvD,EAAAA,UAAL,4HAZa,EAgDjB,OAAA,EAAA,EAjDyBC,EAAAA,cAiDzB,EAAA,EAAA,CAAA,CAAA,IAAA,oBA5BuB,MAAA,WACdE,KAAAA,iBAAiB,QAAS,KAAK6F,UAC/B7F,KAAAA,iBAAiB,aAAc,KAAK8F,cACpC9F,KAAAA,iBAAiB,aAAc,KAAK+F,iBAyB7C,CAAA,IAAA,eAtBkB,MAAA,WAAOxE,KAAAA,MAAMC,gBAAyB,OAAA,OAAA,KAAKqB,OAAzC,OAsBpB,CAAA,IAAA,gBArBmB,MAAA,WAAOtB,KAAAA,MAAMC,gBAAkB,OAqBlD,CAAA,IAAA,WAnBc,MAAA,WACV2D,EAAYT,MAAM,KAAKnE,QAkB3B,CAAA,IAAA,eAfkB,MAAA,WACTyF,KAAAA,eACC9B,IAAAA,EAAQ,IAAI+B,YAAY,aAAc,CAAEC,OAAQ,KAAKC,YAC3DC,cAAclC,KAYlB,CAAA,IAAA,UATa,MAAA,WACF,MAAA,CACLrB,OAAQ,KAAKA,OACbvC,OAAQ,KAAKA,OACbC,KAAM,KAAKA,UAKjB,EAAA,GAAAC,eAAeC,OAAO,cAAe+E;;AClBrC,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,IAAA,IAAA,SAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,OAAA,IAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mBAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,QAAA,IAAA,EAAA,CAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,SAAA,IAAA,OAAA,EAAA,EAAA,UAAA,EAAA,MAAA,aAAA,OAAA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,EAAA,EAAA,KAAA,GAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,QAAA,UAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,MAAA,EAAA,GAAA,IAAA,EAAA,IAAA,SAAA,KAAA,MAAA,EAAA,IAAA,OAAA,GAAA,EAAA,EAAA,EAAA,WAAA,IAAA,MAAA,KAAA,WAAA,SAAA,EAAA,GAAA,OAAA,IAAA,SAAA,SAAA,KAAA,GAAA,QAAA,iBAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GA7CA,QAAA,6BAEA,IAAMa,EAAkB,CAAC,WAAY,QAAS,aAAc,QAAS,SAAU,UACzEC,EAAkB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,aAErFC,EAwCN,SAAA,GAvCiB,SAAA,IAAA,IAAA,EAAA,OAAA,EAAA,KAAA,IACb,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QAEKC,kBAAoB,EACpBC,EAAAA,iBAAmB,EAEnB9E,EAAAA,UAAUC,IAAI,UAAWyE,EAAgB,EAAKG,oBAC9Cd,EAAAA,QAAQgB,UAAYJ,EAAgB,EAAKG,kBAEzC5G,EAAAA,UAAL,wiBATa,EAuCjB,OAAA,EAAA,EAxC0BC,EAAAA,cAwC1B,EAAA,EAAA,CAAA,CAAA,IAAA,oBAhBuB,MAAA,WACnBE,iBAAiB,UAAW,KAAK2G,YAAYzG,KAAK,SAetD,CAAA,IAAA,cAZegE,MAAAA,SAAAA,GACO,MAAdA,EAAMC,KACHxC,KAAAA,UAAUiF,OAAOP,EAAgB,KAAKG,oBACtCA,KAAAA,mBAAqB,KAAKA,kBAAoB,GAAKH,EAAgB9D,OACnEZ,KAAAA,UAAUC,IAAIyE,EAAgB,KAAKG,qBACjB,MAAdtC,EAAMC,MACVsC,KAAAA,kBAAoB,KAAKA,iBAAmB,GAAKH,EAAgB/D,OACjEmD,KAAAA,QAAQgB,UAAYJ,EAAgB,KAAKG,uBAKpD,EAAA,GAAAjG,eAAeC,OAAO,eAAgB8F;;ACQtC,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,IAAA,IAAA,SAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,OAAA,IAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mBAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,QAAA,IAAA,EAAA,CAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,SAAA,IAAA,OAAA,EAAA,EAAA,UAAA,EAAA,MAAA,aAAA,OAAA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,EAAA,EAAA,KAAA,GAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,QAAA,UAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,MAAA,EAAA,GAAA,IAAA,EAAA,IAAA,SAAA,KAAA,MAAA,EAAA,IAAA,OAAA,GAAA,EAAA,EAAA,EAAA,WAAA,IAAA,MAAA,KAAA,WAAA,SAAA,EAAA,GAAA,OAAA,IAAA,SAAA,SAAA,KAAA,GAAA,QAAA,iBAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GArDA,QAAA,mCACA,QAAA,4BACA,QAAA,8BAEA,IAAMM,EAAc,CAAC,SAAU,UAAW,SAAU,MAAO,UAErDC,EA+CN,SAAA,GA9CiB,SAAA,IAAA,IAAA,EAAA,OAAA,EAAA,KAAA,IACb,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QAEKC,aAAe,EACfC,EAAAA,GAAK,EACLC,EAAAA,MAAQ,EACRC,EAAAA,QAAU,EAEVvF,EAAAA,UAAUC,IAAI,QAASiF,EAAY,EAAKE,eACxClH,EAAAA,UAAL,4OATa,EA8CjB,OAAA,EAAA,EA/C2BC,EAAAA,cA+C3B,EAAA,EAAA,CAAA,CAAA,IAAA,oBA7BuB,MAAA,WACnBE,iBAAiB,UAAW,KAAK2G,YAAYzG,KAAK,OAC7CF,KAAAA,iBAAiB,QAAS,KAAKmH,QAAQjH,KAAK,SA2BrD,CAAA,IAAA,cAxBiB,MAAA,WACK,MAAdgE,MAAMC,MACHxC,KAAAA,UAAUiF,OAAOC,EAAY,KAAKE,eAClCA,KAAAA,cAAgB,KAAKA,aAAe,GAAKF,EAAYtE,OACrDZ,KAAAA,UAAUC,IAAIiF,EAAY,KAAKE,kBAoB1C,CAAA,IAAA,UAhBa,MAAA,WACL7C,MAAMkD,SACHH,KAAAA,OAAS/C,MAAMmD,OAAS,GAAK,GAAM,IAEnCL,KAAAA,IAAM9C,MAAMmD,OAAS,EAAI,KAAQ,IACjCH,KAAAA,SAAWhD,MAAMmD,OAAS,EAAI,IAAO,IAIvC9F,KAAAA,MAAMqE,YAAY,mBAAuBvE,GAAAA,OAAAA,KAAKP,IAAI,EAAG,KAAKkG,IAA/D,QACKzF,KAAAA,MAAMqE,YAAY,gBAAiB,KAAKqB,OAExC1F,KAAAA,MAAMqE,YAAY,uBAA2BvE,GAAAA,OAAAA,KAAKP,IAAI,EAAGO,KAAKS,IAAI,GAAI,KAAKoF,UAAhF,WAIJ,EAAA,GAAA1G,eAAeC,OAAO,gBAAiBqG;;AChDvC,aALA,QAAA,+BACA,QAAA,+BAEA,IAAMQ,EAAQC,SAASxH,cAAc,iBAErCC,iBAAiB,aAAc,SAAUkE,GACvCoD,EAAME,QAAQtD,EAAMgC","file":"src.ab7a0fec.js","sourceRoot":"../src","sourcesContent":["class StadiumBoard extends HTMLElement {\n  constructor () {\n    super();\n\n    this.localGoals = 0;\n    this.visitorGoals = 0;\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          position: absolute;\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          top: 0;\n          left: 0;\n          font-size: 22px;\n        }\n\n        .board {\n            width: 500px;\n            height: 128px;\n            background: black;\n            border: 12px solid #000;\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            align-items: center;\n            transition: transform 0.25s linear;\n        }\n\n        .result {\n            background: #400;\n        }\n\n        .screen {\n            font-family: 'LCD2', monospace;\n            font-size: 5rem;\n            color: red;\n            text-align: center;\n            user-select: none;\n        }\n\n        .lcd {\n            width: 100%;\n            font-size: 2rem;\n            grid-column: 3 span;\n        }\n\n        @media screen and (max-width: 700px) {\n          .lcd {\n            font-size: 1.5rem;\n          }\n        }\n      </style>\n      <div class=\"board\">\n        <div class=\"local result screen\">${this.localGoals}</div>\n        <div class=\"visitor result screen\">${this.visitorGoals}</div>\n        <div class=\"lcd screen\"></div>\n      </div>`;\n  }\n\n  connectedCallback () {\n    this.shadowRoot.querySelector('.local').addEventListener('click', this.incLocalGoals.bind(this));\n    this.shadowRoot.querySelector('.visitor').addEventListener('click', this.incVisitorGoals.bind(this));\n  }\n\n  setData (data) {\n    this.shadowRoot.querySelector('.lcd').textContent = data.number + '. ' + data.name;\n  }\n\n  incLocalGoals () {\n    this.localGoals++;\n    this.shadowRoot.querySelector('.local').textContent = this.localGoals;\n  }\n\n  incVisitorGoals () {\n    this.visitorGoals++;\n    this.shadowRoot.querySelector('.visitor').textContent = this.visitorGoals;\n  }\n}\n\ncustomElements.define('stadium-board', StadiumBoard);\n","import images from '../assets/billboard*.jpg';\n\nconst UPDATE_TIME = 15; // Seconds\n\nclass StadiumBillboard extends HTMLElement {\n  constructor () {\n    super();\n\n    this.left = 1;\n    this.right = 2;\n    this.max = 4;\n\n    this.shadow = this.attachShadow({ mode: 'open' });\n    this.shadow.innerHTML = `\n      <style>\n      :host {\n        --billboard-height: 50px;\n\n        position: absolute;\n        background: black;\n        border-top: 2px solid #777;\n        width: 100%;\n        height: var(--billboard-height);\n\n        display: flex;\n        top: calc(var(--billboard-height) * -1 - 8px);\n        transform:\n          rotateX(calc(var(--field-rotate-x) * -1))\n          translateZ(6px);\n        transition: transform 0.2s;\n      }\n\n      .panel {\n        width: 50%;\n        background-position: center;\n        background-size: contain;\n      }\n\n      @media screen and (max-width: 700px) {\n        :host {\n          height: 25px;\n          top: -25px;\n        }\n      }\n      </style>\n      <div class=\"left panel\"></div>\n      <div class=\"right panel\"></div>`;\n  }\n\n  connectedCallback () {\n    this.enable();\n  }\n\n  enable () {\n    this.changeBillBoard();\n    this.timer = setInterval(this.changeBillBoard.bind(this), UPDATE_TIME * 1000);\n  }\n\n  disable () {\n    clearInterval(this.timer);\n  }\n\n  changeBillBoard () {\n    this.left = 1 + ~~(Math.random() * this.max);\n    this.right = 1 + ~~(Math.random() * this.max);\n    this.shadow.querySelector('.left').style.backgroundImage = `url(${images[this.left]})`;\n    this.shadow.querySelector('.right').style.backgroundImage = `url(${images[this.right]})`;\n  }\n}\n\ncustomElements.define('stadium-billboard', StadiumBillboard);\n","class FieldArea extends HTMLElement {\n  constructor () {\n    super();\n    this.classList.add('zone');\n\n    this.innerHTML = `\n      <div class=\"top corner\"></div>\n        <div class=\"area\">\n          <div class=\"goal\"></div>\n          <div class=\"smallarea\"></div>\n        </div>\n      <div class=\"bottom corner\"></div>`;\n  }\n}\n\ncustomElements.define('field-area', FieldArea);\n","import avatars from '../assets/*.jpg';\n\nconst DEMARCATION = ['POR', 'DEF', 'DEF', 'DEF', 'DEF', 'MED', 'MED', 'MED', 'DEL', 'DEL', 'DEL'];\n\nconst random = (min = 0, max) => min + ~~(Math.random() * (max - min));\nconst slug = name => name.toLowerCase().replace(/ /, '-');\n\nconst names = {\n  keepers: [\n    'Benji Price', 'Ed Warner', 'Alan Crockett', 'Teo Sellers', 'Steve Harts'\n  ],\n  players: [\n    'Oliver Atom', 'Bruce Harper', 'Tom Baker', 'Mark Lenders', 'Julian Ross',\n    'Danny Mellow', 'Philip Callahan', 'James Derrick', 'Jason Derrick', 'Patrick Everett',\n    'Ted Carter', 'Paul Diamond', 'Bob Denver', 'Roberto Sedinho', 'Clifford Yuma',\n    'Johnny Mason', 'Ralph Peterson', 'Jack Morris', 'Jeff Turner', 'Patty Haydee',\n    'Arthur Foster', 'Amy Aoba', 'Peter Colby', 'Charlie Custer', 'Frenky Gilbert',\n    'Jill Taylor', 'Timoty Vance', 'Richard Storke', 'Billy Cramer', 'Bart Johnson'\n  ]\n};\n\nconst getKeeper = () => names.keepers.splice(random(0, names.keepers.length), 1)[0] || 'Mr. Undefined';\nconst getPlayer = () => names.players.splice(random(0, names.players.length), 1)[0] || 'Mr. Undefined';\n\nexport default class Teams {\n  static createTeam () {\n    const team = [];\n\n    for (let i = 0; i < 11; i++) {\n      const name = i === 0 ? getKeeper() : getPlayer();\n\n      const player = {\n        name,\n        avatar: avatars[ slug(name) ],\n        stats: {\n          velocity: random(40, 100),\n          resistance: random(40, 100),\n          aggressiveness: random(40, 100),\n          quality: random(40, 100),\n          energy: random(40, 100)\n        },\n        demarcation: DEMARCATION[i]\n      };\n\n      player.stats.media = ~~((Object.values(player.stats).reduce((p, c) => p + c)) / 5);\n      team.push(player);\n    }\n\n    return team;\n  }\n};\n","const FAVORITE_ENGINE = 5; // Male English (Chrome)\n\nexport default class Commentator {\n  constructor () {\n    speechSynthesis.addEventListener('voiceschanged', () => {\n      this.voiceEngine = speechSynthesis.getVoices()[FAVORITE_ENGINE];\n    });\n\n    addEventListener('keydown', (event) => {\n      if (event.key === 's') {\n        this.changeEngine();\n      }\n    });\n  }\n\n  speak (text) {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'en';\n    utterance.voice = this.voiceEngine || null;\n    speechSynthesis.speak(utterance);\n  }\n\n  changeEngine (engine = ~~(Math.random() * speechSynthesis.getVoices().length)) {\n    this.voiceEngine = speechSynthesis.getVoices()[engine];\n    console.log('Change engine to ', this.voiceEngine.name);\n  }\n}\n","import Teams from '/utils/Teams';\nimport Commentator from '/utils/Commentator';\n\n// Fast deep clone (only primitive)\nconst cloneDeep = object => JSON.parse(JSON.stringify(object));\n\nconst commentator = new Commentator();\nconst team = Teams.createTeam();\n\nconst getEnergyColor = energy => {\n  const i = Number.parseInt(energy);\n  return i < 50 ? 'red' : i < 75 ? 'orange' : 'yellow';\n};\n\nclass TeamPlayer extends HTMLElement {\n  constructor () {\n    super();\n    this.number = Number.parseInt(this.getAttribute('number'));\n\n    // Host\n    this.dataset.number = this.number;\n    this.classList.add('player', `p${this.number}`);\n    Object.assign(this, cloneDeep(team[this.number - 1]));\n\n    this.style.setProperty('--player-energy', `${this.stats.energy}%`);\n    this.style.setProperty('--player-energy-color', getEnergyColor(this.stats.energy));\n\n    this.innerHTML = `\n      <div class=\"attrs\">\n        <div class=\"life\">\n          <div class=\"fill\"></div>\n        </div>\n      </div>`;\n  }\n\n  connectedCallback () {\n    this.addEventListener('click', this.playName);\n    this.addEventListener('mouseenter', this.onMouseEnter);\n    this.addEventListener('mouseleave', this.disableAvatar);\n  }\n\n  enableAvatar () { this.style.backgroundImage = `url(${this.avatar})`; }\n  disableAvatar () { this.style.backgroundImage = null; }\n\n  playName () {\n    commentator.speak(this.name);\n  }\n\n  onMouseEnter () {\n    this.enableAvatar();\n    const event = new CustomEvent('playerData', { detail: this.getData() });\n    dispatchEvent(event);\n  }\n\n  getData () {\n    return {\n      avatar: this.avatar,\n      number: this.number,\n      name: this.name\n    };\n  }\n}\n\ncustomElements.define('team-player', TeamPlayer);\n","import '/components/TeamPlayer.js';\n\nconst TEAM_EQUIPATION = ['tenerife', 'barça', 'realmadrid', 'spain', 'atleti', 'pacman'];\nconst FORMATION_TYPES = ['initial', '1-2-6-2', '1-3-4-3', '1-5-2-3', '1-3-2-5', '1-5-1-4', '1-5-5-def'];\n\nclass PlayersZone extends HTMLElement {\n  constructor () {\n    super();\n\n    this.currentEquipation = 0;\n    this.currentFormation = 5;\n\n    this.classList.add('numbers', TEAM_EQUIPATION[this.currentEquipation]);\n    this.dataset.formation = FORMATION_TYPES[this.currentFormation];\n\n    this.innerHTML = `\n        <team-player number=\"1\" class=\"goalkeeper\"></team-player>\n        <team-player number=\"2\"></team-player>\n        <team-player number=\"3\"></team-player>\n        <team-player number=\"4\"></team-player>\n        <team-player number=\"5\"></team-player>\n        <team-player number=\"6\"></team-player>\n        <team-player number=\"7\"></team-player>\n        <team-player number=\"8\"></team-player>\n        <team-player number=\"9\"></team-player>\n        <team-player number=\"10\"></team-player>\n        <team-player number=\"11\"></team-player>`;\n  }\n\n  connectedCallback () {\n    addEventListener('keydown', this.keyListener.bind(this));\n  }\n\n  keyListener (event) {\n    if (event.key === 'e') {\n      this.classList.remove(TEAM_EQUIPATION[this.currentEquipation]);\n      this.currentEquipation = (this.currentEquipation + 1) % TEAM_EQUIPATION.length;\n      this.classList.add(TEAM_EQUIPATION[this.currentEquipation]);\n    } else if (event.key === 'f') {\n      this.currentFormation = (this.currentFormation + 1) % FORMATION_TYPES.length;\n      this.dataset.formation = FORMATION_TYPES[this.currentFormation];\n    }\n  }\n}\n\ncustomElements.define('players-zone', PlayersZone);\n","import '/components/StadiumBillboard.js';\nimport '/components/FieldArea.js';\nimport '/components/PlayersZone.js';\n\nconst FIELD_TYPES = ['normal', 'classic', 'mosaic', 'dry', 'circle'];\n\nclass StadiumField extends HTMLElement {\n  constructor () {\n    super();\n\n    this.currentField = 0;\n    this.rx = 0;\n    this.scale = 1;\n    this.playerZ = 0;\n\n    this.classList.add('field', FIELD_TYPES[this.currentField]);\n    this.innerHTML = `\n      <stadium-billboard></stadium-billboard>\n      <field-area class=\"left\"></field-area>\n      <div class=\"middle zone\"></div>\n      <field-area class=\"right\"></field-area>\n      <players-zone class=\"playable\"></players-zone>`;\n  }\n\n  connectedCallback () {\n    addEventListener('keydown', this.keyListener.bind(this));\n    this.addEventListener('wheel', this.onWheel.bind(this));\n  }\n\n  keyListener () {\n    if (event.key === 't') {\n      this.classList.remove(FIELD_TYPES[this.currentField]);\n      this.currentField = (this.currentField + 1) % FIELD_TYPES.length;\n      this.classList.add(FIELD_TYPES[this.currentField]);\n    }\n  }\n\n  onWheel () {\n    if (event.shiftKey) {\n      this.scale += event.deltaY > 0 ? -0.1 : 0.1;\n    } else {\n      this.rx += event.deltaY > 0 ? 0.25 : -0.25;\n      this.playerZ += event.deltaY > 0 ? 0.5 : -0.5;\n    }\n\n    // Update field\n    this.style.setProperty('--field-rotate-x', `${Math.max(0, this.rx)}deg`);\n    this.style.setProperty('--field-scale', this.scale);\n    // Update player\n    this.style.setProperty('--player-translate-z', `${Math.max(0, Math.min(20, this.playerZ))}px`);\n  }\n}\n\ncustomElements.define('stadium-field', StadiumField);\n","import '/components/StadiumBoard.js';\nimport '/components/StadiumField.js';\n\nconst board = document.querySelector('stadium-board');\n\naddEventListener('playerData', function (event) {\n  board.setData(event.detail);\n});\n"]}